class Tile {
    constructor(type, col, row) {
        this.age = 0;
        this.random_offset = $floor(100 * $random());
        this.type = type;
        this.image_cycle = null;
        this.image_cycle_length = 0;
        this.static_image = null;
        this.styling = null;

        if (this.type == 'floor' || this.type == 'entrance' || this.type == 'exit' || this.type == 'fire') {
            this.passable = true;
        } else {
            this.passable = false;
        }

        this.col = col;
        this.row = row;
        this.open_neighbors = null;
    }

    function spread(grid, firelist) {
        col = this.col;
        row = this.row;
        neighbors = [];
        if (col > 0) neighbors.add([col - 1, row]);
        if (col < 19) neighbors.add([col + 1, row]);
        if (row > 0) neighbors.add([col, row - 1]);
        if (row < 13) neighbors.add([col, row + 1]);
        for (i = 0; i < neighbors.length; ++i) {
            coords = neighbors[i];
            x = coords[0];
            y = coords[1];
            t = grid[x][y];
            if (t.passable && t.type != 'fire') {
                t = new Tile('fire', x, y);
                grid[x][y] = t;
                firelist.add(t);
            }
        }
    }

    function render(imgLib, render_counter, x, y) {
        if (this.image_cycle == null) {
            if (this.type == 'floor') {
                this.image_cycle = [imgLib.images['tiles/floor' + this.styling]];
            } else if (this.type == 'fire') {
                this.image_cycle = [];
                for (i = 1; i <= 6; ++i) {
                    this.image_cycle.add(imgLib.images['tiles/fire/' + i]);
                }
            } else if (this.type == 'wall') {
                this.image_cycle = [imgLib.images['tiles/walls/wall' + this.styling]];
            } else if (this.type == 'entrance') {
                this.image_cycle = [imgLib.images['tiles/entrance']];
            } else if (this.type == 'exit') {
                this.image_cycle = [imgLib.images['tiles/exit']];
            } else if (this.type == 'exitsign') {
                this.image_cycle = [];
                indexes = [1, 1, 1, 2, 3, 4, 5, 5, 5, 5, 5, 4, 3, 2];
                for (i = 0; i < indexes.length; ++i) {
                    this.image_cycle.add(imgLib.images['tiles/exitsign/' + indexes[i]]);
                }
            } else {
                $print('WAT: ' + this.type);
            }

            this.image_cycle_length = this.image_cycle.length;
            if (this.image_cycle_length == 1) {
                this.static_image = this.image_cycle[0];
            }
        }

        img = this.static_image;
        if (img == null) {
            img = this.image_cycle[(render_counter + this.random_offset) % this.image_cycle_length];
        }
        $blit_image(img, x * 40, y * 40 + 40);
    }
}
